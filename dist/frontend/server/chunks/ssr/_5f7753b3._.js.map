{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,8DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,0CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/tabs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/tabs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/hooks/use-toast.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const toast = registerClientReference(\n    function() { throw new Error(\"Attempted to call toast() from the server but toast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.tsx <module evaluation>\",\n    \"toast\",\n);\nexport const toastError = registerClientReference(\n    function() { throw new Error(\"Attempted to call toastError() from the server but toastError is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.tsx <module evaluation>\",\n    \"toastError\",\n);\nexport const toastSuccess = registerClientReference(\n    function() { throw new Error(\"Attempted to call toastSuccess() from the server but toastSuccess is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.tsx <module evaluation>\",\n    \"toastSuccess\",\n);\nexport const useToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call useToast() from the server but useToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.tsx <module evaluation>\",\n    \"useToast\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yDACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yDACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yDACA","debugId":null}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/hooks/use-toast.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const toast = registerClientReference(\n    function() { throw new Error(\"Attempted to call toast() from the server but toast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.tsx\",\n    \"toast\",\n);\nexport const toastError = registerClientReference(\n    function() { throw new Error(\"Attempted to call toastError() from the server but toastError is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.tsx\",\n    \"toastError\",\n);\nexport const toastSuccess = registerClientReference(\n    function() { throw new Error(\"Attempted to call toastSuccess() from the server but toastSuccess is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.tsx\",\n    \"toastSuccess\",\n);\nexport const useToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call useToast() from the server but useToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.tsx\",\n    \"useToast\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,qCACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,qCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA","debugId":null}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/lib/api.ts"],"sourcesContent":["\nimport { toastError } from \"@/hooks/use-toast\";\nimport { Product, DashboardSummary, RecentSale, InventoryMovement, ReportMetadata, FullReport, ReportType, StoreSettings, PurchasePayload, SalePayload, PurchaseHistoryMovement, SalesHistoryMovement } from './types';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\n// Generic fetch function\nasync function fetchAPI(endpoint: string, options: RequestInit = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const headers = {\n        'Content-Type': 'application/json',\n        ...options.headers,\n    };\n    const config: RequestInit = {\n        ...options,\n        headers,\n    };\n\n    console.log(`--- API Request ---\n    URL: ${url}\n    Method: ${config.method || 'GET'}\n    Body: ${config.body ? config.body : 'No Body'}\n    -------------------`);\n\n    try {\n        const response = await fetch(url, config);\n        const responseBody = await response.text();\n\n        if (!response.ok) {\n            let errorData;\n            try {\n                errorData = JSON.parse(responseBody);\n            } catch {\n                errorData = { error: 'El servidor respondió con un error inesperado.', details: responseBody };\n            }\n            const errorMessage = errorData.error || `Error HTTP: ${response.status}`;\n            \n            console.error(`--- API Error Response ---\n            URL: ${url}\n            Status: ${response.status}\n            Body: ${responseBody}\n            ------------------------`);\n            \n            toastError(\"Error de API\", errorMessage);\n            throw new Error(errorMessage);\n        }\n\n        if (response.status === 204 || responseBody.length === 0) {\n            console.log(`--- API Success Response (No Content) ---\n            URL: ${url}\n            Status: 204\n            ---------------------------------------`);\n            return null;\n        }\n\n        const jsonData = JSON.parse(responseBody);\n        console.log(`--- API Success Response ---\n        URL: ${url}\n        Status: ${response.status}\n        Response Body:`, jsonData,\n        `\\n----------------------------`);\n\n        return jsonData;\n    } catch (error) {\n        if (!(error instanceof Error && error.message.includes('Error de API'))) {\n            const message = error instanceof Error ? error.message : 'Ocurrió un error de red o de conexión.';\n            console.error(`--- Network or Parsing Error ---\n            URL: ${url}\n            Error: ${message}\n            --------------------------------`);\n            toastError(\"Error de Conexión\", message);\n        }\n        throw error;\n    }\n}\n\n\n// Product API calls\nexport const getProducts = (): Promise<Product[]> => fetchAPI('/products');\nexport const getProductMovements = (productId: number): Promise<InventoryMovement[]> => fetchAPI(`/products/${productId}/movements`);\n\nexport const createProduct = (product: Partial<Product>): Promise<Product> => {\n    return fetchAPI('/products', {\n        method: 'POST',\n        body: JSON.stringify(product),\n    });\n};\n\nexport const updateProduct = (id: number, product: Partial<Product>): Promise<{ message: string }> => {\n    console.log(JSON.stringify(product));\n    return fetchAPI(`/products/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(product),\n    });\n};\n\nexport const deleteProduct = (id: number): Promise<null> => {\n    console.log(`Deleting product with ID: ${id}`);\n    return fetchAPI(`/products/${id}`, {\n        method: 'DELETE',\n    });\n};\n\n// Purchase API call\nexport const createPurchase = (purchase: PurchasePayload): Promise<{ message: string }> => {\n    // El payload ya viene estructurado correctamente desde el frontend.\n    // Simplemente lo pasamos al backend.\n    return fetchAPI('/purchases', {\n        method: 'POST',\n        body: JSON.stringify(purchase),\n    });\n};\n\nexport const getPurchaseHistory = (): Promise<GroupedPurchase[]> => fetchAPI('/purchases');\n\nexport const updatePurchase = (payload: { transaction_id: string, purchaseData: PurchasePayload }): Promise<{ message: string }> => {\n    return fetchAPI('/purchases', {\n        method: 'PUT',\n        body: JSON.stringify(payload),\n    });\n};\n\nexport const annulPurchase = (payload: { transaction_id: string }): Promise<{ message: string }> => {\n    return fetchAPI('/purchases', {\n        method: 'DELETE',\n        body: JSON.stringify(payload),\n    });\n};\n\nexport const getPurchaseDetails = (transactionId: string): Promise<PurchasePayload> => {\n    return fetchAPI(`/purchases/details?id=${encodeURIComponent(transactionId)}`);\n};\n\n// Sale API calls\nexport const getSalesHistory = (): Promise<GroupedSale[]> => fetchAPI('/sales');\n\nexport const getSaleDetails = (transactionId: string): Promise<SalePayload> => {\n    return fetchAPI(`/sales/details?id=${encodeURIComponent(transactionId)}`);\n};\n\nexport const createSale = (sale: SalePayload): Promise<{ message: string }> => {\n    return fetchAPI('/sales', {\n        method: 'POST',\n        body: JSON.stringify(sale),\n    });\n};\n\nexport const updateSale = (payload: { transaction_id: string, saleData: SalePayload }): Promise<{ message:string }> => {\n    return fetchAPI('/sales', {\n        method: 'PUT',\n        body: JSON.stringify(payload),\n    });\n};\n\nexport const annulSale = (payload: { transaction_id: string }): Promise<{ message: string }> => {\n    return fetchAPI('/sales', {\n        method: 'DELETE',\n        body: JSON.stringify(payload),\n    });\n};\n\n\n// Dashboard API calls\nexport const getDashboardSummary = (): Promise<DashboardSummary> => fetchAPI('/dashboard/summary');\nexport const getRecentSales = (): Promise<RecentSale[]> => fetchAPI('/dashboard/recent-sales');\n\n// Inventory Movements API calls\nexport const createInventoryMovement = (movement: Omit<InventoryMovement, 'id' | 'date'>): Promise<{ message: string }> => {\n    return fetchAPI('/inventory/movements', {\n        method: 'POST',\n        body: JSON.stringify(movement),\n    });\n};\n\nexport const getLatestSnapshot = (): Promise<{ last_date: string | null }> => {\n    return fetchAPI('/inventory/latest-snapshot');\n};\n\nexport const createInventorySnapshot = (snapshot_date: string): Promise<{ message: string, snapshot: { date: string, productCount: number, totalValue: number } }> => {\n    return fetchAPI('/inventory/create-snapshot', {\n        method: 'POST',\n        body: JSON.stringify({ snapshot_date }),\n    });\n};\n\n// Reports API calls\nexport const getReports = (): Promise<ReportMetadata[]> => fetchAPI('/reports');\n\nexport const createReport = (type: ReportType, startDate: string, endDate: string): Promise<FullReport> => {\n    return fetchAPI(`/reports/${type.toLowerCase()}`, {\n        method: 'POST',\n        body: JSON.stringify({ startDate, endDate }),\n    });\n};\n\nexport const exportInventoryToExcel = async (startDate: string, endDate: string): Promise<void> => {\n    const url = `${API_BASE_URL}/reports/inventory-excel`;\n    console.log(`--- API Request (Excel Export) ---\n    URL: ${url}\n    Method: POST\n    Body: ${{ startDate, endDate }}\n    -------------------`);\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ startDate, endDate }),\n        });\n\n        if (!response.ok) {\n            const errorText = await response.text();\n            let errorData;\n            try {\n                errorData = JSON.parse(errorText);\n            } catch {\n                errorData = { error: 'El servidor respondió con un error inesperado durante la exportación.', details: errorText };\n            }\n            const errorMessage = errorData.error || `Error HTTP: ${response.status}`;\n            toastError(\"Error de Exportación\", errorMessage);\n            throw new Error(errorMessage);\n        }\n\n        const blob = await response.blob();\n        const downloadUrl = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = downloadUrl;\n        // Extraer el nombre del archivo de la cabecera Content-Disposition si existe, si não, usar uno por defecto.\n        const disposition = response.headers.get('content-disposition');\n        let filename = `reporte-inventario-${startDate}-a-${endDate}.xlsx`;\n        if (disposition && disposition.indexOf('attachment') !== -1) {\n            const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = filenameRegex.exec(disposition);\n            if (matches != null && matches[1]) {\n                filename = matches[1].replace(/['\"]/g, '');\n            }\n        }\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n        window.URL.revokeObjectURL(downloadUrl);\n\n    } catch (error) {\n        if (!(error instanceof Error && error.message.includes('Error de Exportación'))) {\n            const message = error instanceof Error ? error.message : 'Ocurrió un error de red o de conexión.';\n            toastError(\"Error de Conexión\", message);\n        }\n        throw error;\n    }\n};\n\n\nexport const getReportById = (id: number): Promise<FullReport> => fetchAPI(`/reports/${id}`);\n\n// Settings API calls\nexport const getStoreSettings = (): Promise<StoreSettings> => fetchAPI('/settings/store');\n\nexport const updateStoreSettings = (settings: StoreSettings): Promise<{ message: string }> => {\n    return fetchAPI('/settings/store', {\n        method: 'PUT',\n        body: JSON.stringify(settings),\n    });\n};\n\nexport const backupDatabase = (): Promise<{ message: string }> => fetchAPI('/database/backup', { method: 'POST' });\n\n// Store Management API calls\nexport const getStores = (): Promise<{ stores: any[], activeStoreId: string }> => fetchAPI('/stores');\nexport const createStore = (name: string): Promise<any> => fetchAPI('/stores', { method: 'POST', body: JSON.stringify({ name }) });\nexport const setActiveStore = (storeId: string): Promise<{ message: string }> => fetchAPI('/stores/active', { method: 'POST', body: JSON.stringify({ storeId }) });\nexport const getStoreDetails = (storeId: string): Promise<any> => fetchAPI(`/stores/${storeId}/details`);\nexport const updateStoreDetails = (storeId: string, details: any): Promise<{ message: string }> => fetchAPI(`/stores/${storeId}/details`, { method: 'PUT', body: JSON.stringify(details) });\nexport const deleteStore = (storeId: string): Promise<{ message: string }> => fetchAPI(`/stores/${storeId}`, { method: 'DELETE' });\nexport const quitApplication = (): Promise<void> => fetchAPI('/app/quit', { method: 'POST' });\n\n// Pending Transactions API calls\nexport const getPendingTransactions = (): Promise<{ sales: any[], purchases: any[] }> => fetchAPI('/pending-transactions');\n\nexport const addPendingTransaction = (type: 'sale' | 'purchase', payload: any): Promise<any> => {\n    return fetchAPI('/pending-transactions', {\n        method: 'POST',\n        body: JSON.stringify({ type, payload }),\n    });\n};\n\nexport const removePendingTransaction = (id: string): Promise<{ message: string }> => {\n    return fetchAPI(`/pending-transactions/${id}`, {\n        method: 'DELETE',\n    });\n};\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\r\n\r\nfunction Skeleton({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div\r\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Skeleton }\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport {cn} from '@/lib/utils';\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\r\n  ({className, ...props}, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = 'Textarea';\r\n\r\nexport {Textarea};\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 860, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/switch.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Switch = registerClientReference(\n    function() { throw new Error(\"Attempted to call Switch() from the server but Switch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/switch.tsx <module evaluation>\",\n    \"Switch\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA","debugId":null}},
    {"offset": {"line": 874, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/switch.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Switch = registerClientReference(\n    function() { throw new Error(\"Attempted to call Switch() from the server but Switch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/switch.tsx\",\n    \"Switch\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA","debugId":null}},
    {"offset": {"line": 888, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 898, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/popover.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Popover = registerClientReference(\n    function() { throw new Error(\"Attempted to call Popover() from the server but Popover is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/popover.tsx <module evaluation>\",\n    \"Popover\",\n);\nexport const PopoverContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverContent() from the server but PopoverContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/popover.tsx <module evaluation>\",\n    \"PopoverContent\",\n);\nexport const PopoverTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverTrigger() from the server but PopoverTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/popover.tsx <module evaluation>\",\n    \"PopoverTrigger\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA","debugId":null}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/popover.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Popover = registerClientReference(\n    function() { throw new Error(\"Attempted to call Popover() from the server but Popover is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/popover.tsx\",\n    \"Popover\",\n);\nexport const PopoverContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverContent() from the server but PopoverContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/popover.tsx\",\n    \"PopoverContent\",\n);\nexport const PopoverTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverTrigger() from the server but PopoverTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/popover.tsx\",\n    \"PopoverTrigger\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA","debugId":null}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 952, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/calendar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Calendar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Calendar() from the server but Calendar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/calendar.tsx <module evaluation>\",\n    \"Calendar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gEACA","debugId":null}},
    {"offset": {"line": 966, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/calendar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Calendar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Calendar() from the server but Calendar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/calendar.tsx\",\n    \"Calendar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4CACA","debugId":null}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/app/%28app%29/settings/page.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogTrigger, DialogDescription } from \"@/components/ui/dialog\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useTheme } from \"@/components/theme-provider\";\nimport { Download, Upload, Trash2, Calendar as CalendarIcon, ChevronsUpDown } from \"lucide-react\";\nimport { useBackendStatus } from '@/app/(app)/layout';\nimport { getStores, getStoreDetails, updateStoreDetails, deleteStore, getLatestSnapshot, createInventorySnapshot } from '@/lib/api';\nimport { toastSuccess, toastError } from '@/hooks/use-toast';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\n\ninterface Store {\n  id: string;\n  name: string;\n  dbPath: string;\n}\n\ninterface StoreDetails {\n  name?: string;\n  rif?: string;\n  address?: string;\n  advanced?: {\n    allowNegativeStockSales?: boolean;\n    allowSellBelowCost?: boolean;\n    showOutOfStockProducts?: boolean;\n  }\n}\n\ninterface SnapshotResult {\n    date: string;\n    productCount: number;\n    totalValue: number;\n}\n\nfunction InventorySnapshotCard() {\n    const [latestSnapshotDate, setLatestSnapshotDate] = useState<string | null>(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date());\n    const [isCreating, setIsCreating] = useState(false);\n    const [snapshotResult, setSnapshotResult] = useState<SnapshotResult | null>(null);\n\n    const fetchLatestSnapshot = useCallback(async () => {\n        setIsLoading(true);\n        try {\n            const { last_date } = await getLatestSnapshot();\n            setLatestSnapshotDate(last_date);\n        } catch (error) {\n            // Error handled in API layer\n        } finally {\n            setIsLoading(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchLatestSnapshot();\n    }, [fetchLatestSnapshot]);\n\n    const handleCreateSnapshot = async () => {\n        if (!selectedDate) {\n            toastError(\"Error\", \"Por favor, selecciona una fecha para el cierre.\");\n            return;\n        }\n        setIsCreating(true);\n        try {\n            const dateString = format(selectedDate, 'yyyy-MM-dd');\n            const result = await createInventorySnapshot(dateString);\n            setSnapshotResult(result.snapshot);\n            toastSuccess(\"Éxito\", `Cierre para el ${dateString} creado correctamente.`);\n            fetchLatestSnapshot(); // Actualizar la fecha del último snapshot\n        } catch (error) {\n            // Error handled in API layer\n        } finally {\n            setIsCreating(false);\n        }\n    };\n\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle>Cierres de Inventario (Snapshots)</CardTitle>\n                <CardDescription>\n                    Crea un \"cierre\" o punto de guardado del inventario en una fecha específica para acelerar la generación de reportes futuros.\n                </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n                {isLoading ? (\n                    <Skeleton className=\"h-6 w-1/2\" />\n                ) : (\n                    <p className=\"text-sm text-muted-foreground\">\n                        Último cierre realizado: {latestSnapshotDate ? format(new Date(latestSnapshotDate), 'PPP', { locale: es }) : 'Ninguno'}\n                    </p>\n                )}\n                <div className=\"flex flex-col sm:flex-row items-center gap-4\">\n                    <Popover>\n                        <PopoverTrigger asChild>\n                            <Button\n                                variant={\"outline\"}\n                                className=\"w-full sm:w-[280px] justify-start text-left font-normal\"\n                            >\n                                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                                {selectedDate ? format(selectedDate, 'PPP', { locale: es }) : <span>Selecciona una fecha</span>}\n                            </Button>\n                        </PopoverTrigger>\n                        <PopoverContent className=\"w-auto p-0\">\n                            <Calendar\n                                mode=\"single\"\n                                selected={selectedDate}\n                                onSelect={setSelectedDate}\n                                initialFocus\n                            />\n                        </PopoverContent>\n                    </Popover>\n                    <Button onClick={handleCreateSnapshot} disabled={isCreating || !selectedDate}>\n                        {isCreating ? 'Generando Cierre...' : 'Generar Cierre'}\n                    </Button>\n                </div>\n                {snapshotResult && (\n                     <Dialog open={!!snapshotResult} onOpenChange={(isOpen) => !isOpen && setSnapshotResult(null)}>\n                        <DialogContent>\n                            <DialogHeader>\n                                <DialogTitle>Resultado del Cierre de Inventario</DialogTitle>\n                            </DialogHeader>\n                            <div className=\"space-y-4 py-4\">\n                                <div className=\"flex justify-between\">\n                                    <span className=\"text-muted-foreground\">Fecha del Cierre:</span>\n                                    <span className=\"font-medium\">{format(new Date(snapshotResult.date), 'PPP', { locale: es })}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                    <span className=\"text-muted-foreground\">Productos Procesados:</span>\n                                    <span className=\"font-medium\">{snapshotResult.productCount}</span>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                    <span className=\"text-muted-foreground\">Valor Total del Inventario:</span>\n                                    <span className=\"font-bold text-lg text-primary\">\n                                        ${snapshotResult.totalValue.toLocaleString('es-VE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n                                    </span>\n                                </div>\n                            </div>\n                            <DialogFooter>\n                                <Button onClick={() => setSnapshotResult(null)}>Cerrar</Button>\n                            </DialogFooter>\n                        </DialogContent>\n                    </Dialog>\n                )}\n            </CardContent>\n        </Card>\n    );\n}\n\nfunction DangerZone({ activeStoreId, stores, onStoreDeleted }: { activeStoreId: string, stores: Store[], onStoreDeleted: () => void }) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [confirmationText, setConfirmationText] = useState('');\n    const [isDeleting, setIsDeleting] = useState(false);\n    const activeStore = stores.find(s => s.id === activeStoreId);\n\n    const handleDelete = async () => {\n        if (confirmationText !== activeStore?.name) {\n            toastError(\"Error\", \"El nombre de la tienda no coincide.\");\n            return;\n        }\n        setIsDeleting(true);\n        try {\n            await deleteStore(activeStoreId);\n            toastSuccess(\"Tienda Eliminada\", \"La tienda ha sido marcada para su eliminación.\");\n            onStoreDeleted();\n            setIsOpen(false);\n        } catch (error) {\n            // Handled by API layer\n        } finally {\n            setIsDeleting(false);\n        }\n    };\n\n    return (\n        <Card className=\"border-destructive\">\n            <CardHeader>\n                <CardTitle className=\"text-destructive\">Zona de Peligro</CardTitle>\n                <CardDescription>Estas acciones son irreversibles.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Dialog open={isOpen} onOpenChange={setIsOpen}>\n                    <DialogTrigger asChild>\n                        <Button variant=\"destructive\" disabled={stores.length <= 1}>\n                            <Trash2 className=\"mr-2 h-4 w-4\" />\n                            Eliminar Tienda Actual\n                        </Button>\n                    </DialogTrigger>\n                    <DialogContent>\n                        <DialogHeader>\n                            <DialogTitle>¿Estás absolutamente seguro?</DialogTitle>\n                            <DialogDescription>\n                                Esta acción no se puede deshacer. La tienda será marcada para su eliminación y se borrará permanentemente después de 90 días.\n                                Para confirmar, escribe <strong>{activeStore?.name}</strong> en el campo de abajo.\n                            </DialogDescription>\n                        </DialogHeader>\n                        <Input \n                            value={confirmationText}\n                            onChange={(e) => setConfirmationText(e.target.value)}\n                            placeholder=\"Escribe el nombre de la tienda\"\n                        />\n                        <DialogFooter>\n                            <Button variant=\"ghost\" onClick={() => setIsOpen(false)}>Cancelar</Button>\n                            <Button variant=\"destructive\" onClick={handleDelete} disabled={isDeleting || confirmationText !== activeStore?.name}>\n                                {isDeleting ? \"Eliminando...\" : \"Entiendo, eliminar esta tienda\"}\n                            </Button>\n                        </DialogFooter>\n                    </DialogContent>\n                </Dialog>\n                {stores.length <= 1 && <p className=\"text-sm text-muted-foreground mt-2\">No puedes eliminar la única tienda que existe.</p>}\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default function SettingsPage() {\n  const { setTheme } = useTheme();\n  const { isBackendReady, refetchKey, triggerRefetch } = useBackendStatus();\n\n  const [stores, setStores] = useState<Store[]>([]);\n  const [activeStoreId, setActiveStoreId] = useState<string>('');\n  const [storeDetails, setStoreDetails] = useState<StoreDetails>({});\n  \n  const [isLoadingStores, setIsLoadingStores] = useState(true);\n  const [isLoadingDetails, setIsLoadingDetails] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const fetchStores = useCallback(async () => {\n    if (!isBackendReady) return;\n    setIsLoadingStores(true);\n    try {\n      const { stores: storeList, activeStoreId: currentActiveId } = await getStores();\n      setStores(storeList);\n      setActiveStoreId(currentActiveId);\n    } catch (error) {\n      toastError(\"Error\", \"No se pudieron cargar las tiendas.\");\n    } finally {\n      setIsLoadingStores(false);\n    }\n  }, [isBackendReady]);\n\n  const fetchStoreDetails = useCallback(async (storeId: string) => {\n    if (!storeId) return;\n    setIsLoadingDetails(true);\n    try {\n        const details = await getStoreDetails(storeId);\n        setStoreDetails(details || {});\n    } catch (error) {\n        toastError(\"Error\", \"No se pudieron cargar los detalles de la tienda.\");\n        setStoreDetails({});\n    } finally {\n        setIsLoadingDetails(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchStores();\n  }, [isBackendReady, fetchStores, refetchKey]);\n\n  useEffect(() => {\n    if (activeStoreId) {\n        fetchStoreDetails(activeStoreId);\n    }\n  }, [activeStoreId, fetchStoreDetails]);\n\n  const handleDetailsChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { id, value } = e.target;\n    setStoreDetails(prev => ({ ...prev, [id]: value }));\n  };\n\n  const handleAdvancedChange = (id: keyof NonNullable<StoreDetails['advanced']>, checked: boolean) => {\n    console.log(`[SETTINGS] Changing advanced setting: ${id} to ${checked}`);\n    setStoreDetails(prev => ({\n        ...prev,\n        advanced: {\n            ...prev.advanced,\n            [id]: checked\n        }\n    }));\n  };\n\n  const handleSaveChanges = async () => {\n    if (!activeStoreId) return;\n    setIsSaving(true);\n    try {\n        await updateStoreDetails(activeStoreId, storeDetails);\n        toastSuccess(\"Éxito\", \"La configuración de la tienda ha sido actualizada.\");\n    } catch (error) {\n        // Error handled in API layer\n    } finally {\n        setIsSaving(false);\n    }\n  };\n\n  const themes = [\n    { value: 'light', label: 'Claro' },\n    { value: 'dark', label: 'Gris Oscuro' },\n    { value: 'sepia', label: 'Sepia' },\n  ];\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n       <div className=\"flex-1\">\n            <h1 className=\"font-semibold text-lg md:text-2xl\">Configuración</h1>\n            <p className=\"text-sm text-muted-foreground\">Gestiona tus tiendas y la apariencia de la aplicación.</p>\n        </div>\n      <Tabs defaultValue=\"stores\" className=\"grid w-full gap-4\">\n        <TabsList>\n          <TabsTrigger value=\"stores\">Tiendas</TabsTrigger>\n          <TabsTrigger value=\"appearance\">Apariencia</TabsTrigger>\n          <TabsTrigger value=\"advanced\">Avanzados</TabsTrigger>\n          <TabsTrigger value=\"miscellaneous\">Misceláneos</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"stores\">\n           <div className=\"grid md:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Detalles de la Tienda Activa</CardTitle>\n                  <CardDescription>\n                    Actualiza la información de la tienda seleccionada.\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                    {isLoadingDetails || isLoadingStores ? <Skeleton className=\"h-48 w-full\" /> : (\n                        <div className=\"space-y-4\">\n                            <div className=\"space-y-1\">\n                                <Label htmlFor=\"name\">Nombre</Label>\n                                <Input id=\"name\" value={storeDetails.name || ''} onChange={handleDetailsChange} />\n                            </div>\n                            <div className=\"space-y-1\">\n                                <Label htmlFor=\"rif\">RIF</Label>\n                                <Input id=\"rif\" placeholder=\"J-12345678-9\" value={storeDetails.rif || ''} onChange={handleDetailsChange} />\n                            </div>\n                            <div className=\"space-y-1\">\n                                <Label htmlFor=\"address\">Dirección</Label>\n                                <Textarea id=\"address\" value={storeDetails.address || ''} onChange={handleDetailsChange} />\n                            </div>\n                            <Button onClick={handleSaveChanges} disabled={isSaving}>\n                                {isSaving ? 'Guardando...' : 'Guardar Cambios'}\n                            </Button>\n                        </div>\n                    )}\n                </CardContent>\n              </Card>\n              <div className=\"space-y-6\">\n                <DangerZone activeStoreId={activeStoreId} stores={stores} onStoreDeleted={triggerRefetch} />\n              </div>\n           </div>\n        </TabsContent>\n        <TabsContent value=\"appearance\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Apariencia</CardTitle>\n              <CardDescription>\n                Personaliza la apariencia de la aplicación.\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4\">\n                 {themes.map((theme) => (\n                    <Button key={theme.value} variant=\"outline\" onClick={() => setTheme(theme.value as any)} className=\"justify-center\">{theme.label}</Button>\n                  ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        <TabsContent value=\"advanced\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>Configuraciones Avanzadas</CardTitle>\n                    <CardDescription>\n                        Modifica las reglas y restricciones de la aplicación. Usar con precaución.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                    <div className=\"flex items-center justify-between rounded-lg border p-4\">\n                        <div className=\"space-y-0.5\">\n                            <Label htmlFor=\"allowNegativeStock\" className=\"text-base\">Permitir Stock Negativo</Label>\n                            <p className=\"text-sm text-muted-foreground\">\n                                Permite completar ventas aunque el stock del producto sea insuficiente.\n                            </p>\n                        </div>\n                        <Switch\n                            id=\"allowNegativeStockSales\"\n                            checked={storeDetails.advanced?.allowNegativeStockSales || false}\n                            onCheckedChange={(checked) => handleAdvancedChange('allowNegativeStockSales', checked)}\n                        />\n                    </div>\n                    <div className=\"flex items-center justify-between rounded-lg border p-4\">\n                        <div className=\"space-y-0.5\">\n                            <Label htmlFor=\"allowSellBelowCost\" className=\"text-base\">Permitir Vender Bajo Costo</Label>\n                            <p className=\"text-sm text-muted-foreground\">\n                                Permite registrar ventas con un precio inferior al costo promedio del producto.\n                            </p>\n                        </div>\n                        <Switch\n                            id=\"allowSellBelowCost\"\n                            checked={storeDetails.advanced?.allowSellBelowCost || false}\n                            onCheckedChange={(checked) => handleAdvancedChange('allowSellBelowCost', checked)}\n                        />\n                    </div>\n                    <div className=\"flex items-center justify-between rounded-lg border p-4\">\n                        <div className=\"space-y-0.5\">\n                            <Label htmlFor=\"showOutOfStockProducts\" className=\"text-base\">Mostrar Productos Sin Stock</Label>\n                            <p className=\"text-sm text-muted-foreground\">\n                                Muestra todos los productos en la página de ventas, incluso los que no tienen stock.\n                            </p>\n                        </div>\n                        <Switch\n                            id=\"showOutOfStockProducts\"\n                            checked={storeDetails.advanced?.showOutOfStockProducts || false}\n                            onCheckedChange={(checked) => handleAdvancedChange('showOutOfStockProducts', checked)}\n                        />\n                    </div>\n                    <div className=\"flex items-center justify-between rounded-lg border p-4\">\n                        <div className=\"space-y-0.5\">\n                            <Label htmlFor=\"showInactiveProducts\" className=\"text-base\">Mostrar Productos Inactivos</Label>\n                            <p className=\"text-sm text-muted-foreground\">\n                                Muestra productos marcados como 'Inactivo' en las listas de selección.\n                            </p>\n                        </div>\n                        <Switch\n                            id=\"showInactiveProducts\"\n                            checked={storeDetails.advanced?.showInactiveProducts || false}\n                            onCheckedChange={(checked) => handleAdvancedChange('showInactiveProducts', checked)}\n                        />\n                    </div>\n                    <Button onClick={handleSaveChanges} disabled={isSaving}>\n                        {isSaving ? 'Guardando...' : 'Guardar Cambios Avanzados'}\n                    </Button>\n                </CardContent>\n            </Card>\n        </TabsContent>\n        <TabsContent value=\"miscellaneous\">\n           <div className=\"grid gap-6\">\n            <InventorySnapshotCard />\n            <Card>\n              <CardHeader>\n                <CardTitle>Base de Datos</CardTitle>\n                <CardDescription>\n                  Realiza respaldos y restauraciones de tu base de datos.\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"flex flex-col sm:flex-row gap-4\">\n                <Button><Upload className=\"mr-2 h-4 w-4\" />Respaldar</Button>\n                <Button variant=\"outline\"><Download className=\"mr-2 h-4 w-4\" />Restaurar</Button>\n              </CardContent>\n            </Card>\n           </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
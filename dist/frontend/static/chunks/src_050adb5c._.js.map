{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent }\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell:\r\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\r\n        ),\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: ({ className, ...props }) => (\r\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n        IconRight: ({ className, ...props }) => (\r\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCalendar.displayName = \"Calendar\"\r\n\r\nexport { Calendar }\r\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///C:/PROGRAMACION/INVENTARIO/studio/src/app/%28app%29/reports/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { DateRange } from 'react-day-picker';\nimport { Calendar as CalendarIcon, Box, Package, ShoppingCart, FileSpreadsheet, FileText } from 'lucide-react';\n\nimport { cn } from '@/lib/utils';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Label } from '@/components/ui/label';\nimport { useToast, toastSuccess, toastError } from '@/hooks/use-toast';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from '@/components/ui/dialog';\n\nimport { ReportMetadata, ReportType, FullReport } from '@/lib/types';\nimport { useBackendStatus } from '@/app/(app)/layout';\nimport { getReports, createReport, getReportById, exportInventoryToExcel } from '@/lib/api';\n\ntype OutputFormat = 'excel' | 'pdf';\n\nconst reportOptions: { type: ReportType; label: string; icon: React.ElementType }[] = [\n  { type: 'SALES', label: 'Libro de Ventas', icon: ShoppingCart },\n  { type: 'PURCHASES', label: 'Libro de Compras', icon: Package },\n  { type: 'INVENTORY', label: 'Inventario', icon: Box },\n];\n\nexport default function ReportsPage() {\n    const { isBackendReady, refetchKey } = useBackendStatus();\n    const [reports, setReports] = useState<ReportMetadata[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [isExporting, setIsExporting] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    \n    const [selectedReportType, setSelectedReportType] = useState<ReportType | null>(null);\n    const [outputFormat, setOutputFormat] = useState<OutputFormat>('excel');\n    const [date, setDate] = useState<DateRange | undefined>({ from: new Date(new Date().setDate(1)), to: new Date() });\n    \n    const [isGenerateModalOpen, setIsGenerateModalOpen] = useState(false);\n    const [isViewDialogOpen, setIsViewDialogOpen] = useState(false);\n    const [selectedReport, setSelectedReport] = useState<FullReport | null>(null);\n\n    const fetchReports = useCallback(async () => {\n        if (!isBackendReady) {\n            setIsLoading(true);\n            setError(\"Esperando conexión con el backend...\");\n            return;\n        }\n        try {\n            setIsLoading(true);\n            setError(null);\n            const data = await getReports();\n            setReports(data);\n        } catch (err: any) {\n            setError(err.message);\n            // El toast de error ya se maneja en la capa de API\n        } finally {\n            setIsLoading(false);\n        }\n    }, [isBackendReady]);\n\n    useEffect(() => {\n        fetchReports();\n    }, [fetchReports, refetchKey]);\n\n    const handleReportSelection = (reportType: ReportType) => {\n        setSelectedReportType(reportType);\n        setIsGenerateModalOpen(true);\n    };\n\n    const handleGenerateReport = async () => {\n        if (!selectedReportType || !date?.from || !date?.to) {\n            toastError(\"Error de Validación\", \"Por favor, seleccione un tipo de informe y un rango de fechas.\");\n            return;\n        }\n\n        const startDate = format(date.from, 'yyyy-MM-dd');\n        const endDate = format(date.to, 'yyyy-MM-dd');\n\n        // Condición para la nueva funcionalidad de exportación\n        if (selectedReportType === 'INVENTORY' && outputFormat === 'excel') {\n            setIsExporting(true);\n            try {\n                await exportInventoryToExcel(startDate, endDate);\n                toastSuccess(\"Éxito\", \"La exportación a Excel ha comenzado. El archivo se descargará en breve.\");\n                setIsGenerateModalOpen(false);\n            } catch (err) {\n                // El toast de error ya se maneja en la capa de API\n            } finally {\n                setIsExporting(false);\n            }\n            return; // Salir de la función después de exportar\n        }\n        \n        // Lógica existente para generar otros informes\n        setIsSubmitting(true);\n        try {\n            await createReport(selectedReportType, startDate, endDate);\n            toastSuccess(\"Éxito\", \"El informe se ha generado correctamente.\");\n            fetchReports(); // Refresh the list\n            setIsGenerateModalOpen(false); // Close modal on success\n        } catch (err: any) {\n            // El toast de error ya se maneja en la capa de API\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    const handleViewReport = async (id: number) => {\n        try {\n            const reportData = await getReportById(id);\n            setSelectedReport(reportData);\n            setIsViewDialogOpen(true);\n        } catch (err: any) {\n            // El toast de error ya se maneja en la capa de API\n        }\n    };\n    \n    const formatDate = (dateString: string) => new Date(dateString).toLocaleDateString('es-ES', { day: '2-digit', month: 'long', year: 'numeric', hour: '2-digit', minute: '2-digit' });\n\n    return (\n        <div className=\"flex flex-col gap-8\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>Generar Nuevo Informe</CardTitle>\n                    <CardDescription>Selecciona el tipo de informe que deseas generar.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    {reportOptions.map((report) => (\n                        <Card\n                            key={report.type}\n                            className=\"cursor-pointer transition-all hover:border-primary hover:shadow-lg\"\n                            onClick={() => handleReportSelection(report.type)}\n                        >\n                            <CardContent className=\"flex flex-col items-center justify-center p-8 gap-4\">\n                                <report.icon className=\"h-12 w-12 text-primary\" />\n                                <p className=\"text-lg font-semibold\">{report.label}</p>\n                            </CardContent>\n                        </Card>\n                    ))}\n                </CardContent>\n            </Card>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Informes Generados</CardTitle>\n                    <CardDescription>Lista de informes generados previamente.</CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableHead>ID</TableHead>\n                                <TableHead>Fecha de Generación</TableHead>\n                                <TableHead>Fecha de Inicio</TableHead>\n                                <TableHead>Fecha de Fin</TableHead>\n                                <TableHead><span className=\"sr-only\">Acciones</span></TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {isLoading ? (\n                                <TableRow><TableCell colSpan={5} className=\"text-center\">Cargando...</TableCell></TableRow>\n                            ) : error ? (\n                                <TableRow><TableCell colSpan={5} className=\"text-center text-destructive\">{error}</TableCell></TableRow>\n                            ) : reports.length === 0 ? (\n                                <TableRow><TableCell colSpan={5} className=\"text-center\">No se encontraron informes generados.</TableCell></TableRow>\n                            ) : reports.map(report => (\n                                <TableRow key={report.id}>\n                                    <TableCell className=\"font-medium\">{report.id}</TableCell>\n                                    <TableCell>{formatDate(report.generated_at)}</TableCell>\n                                    <TableCell>{format(new Date(report.start_date), 'dd/MM/yyyy')}</TableCell>\n                                    <TableCell>{format(new Date(report.end_date), 'dd/MM/yyyy')}</TableCell>\n                                    <TableCell className=\"text-right\">\n                                        <Button variant=\"outline\" size=\"sm\" onClick={() => handleViewReport(report.id)}>\n                                            Ver\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </CardContent>\n            </Card>\n\n            {/* Modal para generar informe */}\n            <Dialog open={isGenerateModalOpen} onOpenChange={setIsGenerateModalOpen}>\n                <DialogContent className=\"sm:max-w-md\">\n                    <DialogHeader>\n                        <DialogTitle>Generar {reportOptions.find(r => r.type === selectedReportType)?.label}</DialogTitle>\n                        <DialogDescription>\n                            Selecciona el rango de fechas y el formato de salida.\n                        </DialogDescription>\n                    </DialogHeader>\n                    <div className=\"grid gap-6 py-4\">\n                        <div className=\"grid gap-3\">\n                            <Label htmlFor=\"date-range\">Rango de Fechas</Label>\n                            <Popover>\n                                <PopoverTrigger asChild>\n                                    <Button id=\"date-range\" variant={'outline'} className={cn('w-full justify-start text-left font-normal', !date && 'text-muted-foreground')}>\n                                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                                        {date?.from ? (date.to ? `${format(date.from, 'LLL dd, y', { locale: es })} - ${format(date.to, 'LLL dd, y', { locale: es })}` : format(date.from, 'LLL dd, y', { locale: es })) : <span>Seleccione un rango</span>}\n                                    </Button>\n                                </PopoverTrigger>\n                                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                                    <Calendar initialFocus mode=\"range\" defaultMonth={date?.from} selected={date} onSelect={setDate} numberOfMonths={1} locale={es} />\n                                </PopoverContent>\n                            </Popover>\n                        </div>\n                        <div className=\"grid gap-3\">\n                            <Label>Formato de Salida</Label>\n                            <div className=\"grid grid-cols-2 gap-2\">\n                                <Button\n                                    variant={outputFormat === 'excel' ? 'secondary' : 'outline'}\n                                    onClick={() => setOutputFormat('excel')}\n                                    className=\"flex items-center gap-2\"\n                                >\n                                    <FileSpreadsheet className=\"h-4 w-4\" />\n                                    Excel\n                                </Button>\n                                <Button\n                                    variant={outputFormat === 'pdf' ? 'secondary' : 'outline'}\n                                    onClick={() => setOutputFormat('pdf')}\n                                    className=\"flex items-center gap-2\"\n                                >\n                                    <FileText className=\"h-4 w-4\" />\n                                    PDF\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <DialogFooter>\n                        <Button variant=\"outline\" onClick={() => setIsGenerateModalOpen(false)}>Cancelar</Button>\n                        <Button onClick={handleGenerateReport} disabled={isSubmitting || isExporting}>\n                            {isSubmitting ? 'Generando...' : isExporting ? 'Exportando...' : 'Generar Informe'}\n                        </Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n\n            {/* Modal para ver informe */}\n            <Dialog open={isViewDialogOpen} onOpenChange={setIsViewDialogOpen}>\n                <DialogContent className=\"max-w-4xl h-[80vh] flex flex-col\">\n                    <DialogHeader>\n                        <DialogTitle>Detalle del Informe #{selectedReport?.id}</DialogTitle>\n                        <DialogDescription>\n                            Generado el {selectedReport ? formatDate(selectedReport.generated_at) : ''}\n                        </DialogDescription>\n                    </DialogHeader>\n                    <div className=\"flex-grow overflow-y-auto p-1 bg-muted rounded-md\">\n                        <pre className=\"text-sm\">\n                            {selectedReport ? JSON.stringify(JSON.parse(selectedReport.report_data), null, 2) : ''}\n                        </pre>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AApBA;;;;;;;;;;;;;;;;AAwBA,MAAM,gBAAgF;IACpF;QAAE,MAAM;QAAS,OAAO;QAAmB,MAAM,yNAAA,CAAA,eAAY;IAAC;IAC9D;QAAE,MAAM;QAAa,OAAO;QAAoB,MAAM,2MAAA,CAAA,UAAO;IAAC;IAC9D;QAAE,MAAM;QAAa,OAAO;QAAc,MAAM,mMAAA,CAAA,MAAG;IAAC;CACrD;AAEc,SAAS;;IACpB,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD;IACtD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IAC3D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB;IAChF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB;IAC/D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAyB;QAAE,MAAM,IAAI,KAAK,IAAI,OAAO,OAAO,CAAC;QAAK,IAAI,IAAI;IAAO;IAEhH,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB;IAExE,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iDAAE;YAC7B,IAAI,CAAC,gBAAgB;gBACjB,aAAa;gBACb,SAAS;gBACT;YACJ;YACA,IAAI;gBACA,aAAa;gBACb,SAAS;gBACT,MAAM,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,aAAU,AAAD;gBAC5B,WAAW;YACf,EAAE,OAAO,KAAU;gBACf,SAAS,IAAI,OAAO;YACpB,mDAAmD;YACvD,SAAU;gBACN,aAAa;YACjB;QACJ;gDAAG;QAAC;KAAe;IAEnB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN;QACJ;gCAAG;QAAC;QAAc;KAAW;IAE7B,MAAM,wBAAwB,CAAC;QAC3B,sBAAsB;QACtB,uBAAuB;IAC3B;IAEA,MAAM,uBAAuB;QACzB,IAAI,CAAC,sBAAsB,CAAC,MAAM,QAAQ,CAAC,MAAM,IAAI;YACjD,CAAA,GAAA,gIAAA,CAAA,aAAU,AAAD,EAAE,uBAAuB;YAClC;QACJ;QAEA,MAAM,YAAY,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,UAAU,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,EAAE,EAAE;QAEhC,uDAAuD;QACvD,IAAI,uBAAuB,eAAe,iBAAiB,SAAS;YAChE,eAAe;YACf,IAAI;gBACA,MAAM,CAAA,GAAA,oHAAA,CAAA,yBAAsB,AAAD,EAAE,WAAW;gBACxC,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD,EAAE,SAAS;gBACtB,uBAAuB;YAC3B,EAAE,OAAO,KAAK;YACV,mDAAmD;YACvD,SAAU;gBACN,eAAe;YACnB;YACA,QAAQ,0CAA0C;QACtD;QAEA,+CAA+C;QAC/C,gBAAgB;QAChB,IAAI;YACA,MAAM,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EAAE,oBAAoB,WAAW;YAClD,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD,EAAE,SAAS;YACtB,gBAAgB,mBAAmB;YACnC,uBAAuB,QAAQ,yBAAyB;QAC5D,EAAE,OAAO,KAAU;QACf,mDAAmD;QACvD,SAAU;YACN,gBAAgB;QACpB;IACJ;IAEA,MAAM,mBAAmB,OAAO;QAC5B,IAAI;YACA,MAAM,aAAa,MAAM,CAAA,GAAA,oHAAA,CAAA,gBAAa,AAAD,EAAE;YACvC,kBAAkB;YAClB,oBAAoB;QACxB,EAAE,OAAO,KAAU;QACf,mDAAmD;QACvD;IACJ;IAEA,MAAM,aAAa,CAAC,aAAuB,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;YAAE,KAAK;YAAW,OAAO;YAAQ,MAAM;YAAW,MAAM;YAAW,QAAQ;QAAU;IAEjL,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC,mIAAA,CAAA,OAAI;;kCACD,6LAAC,mIAAA,CAAA,aAAU;;0CACP,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAErB,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;kCAClB,cAAc,GAAG,CAAC,CAAC,uBAChB,6LAAC,mIAAA,CAAA,OAAI;gCAED,WAAU;gCACV,SAAS,IAAM,sBAAsB,OAAO,IAAI;0CAEhD,cAAA,6LAAC,mIAAA,CAAA,cAAW;oCAAC,WAAU;;sDACnB,6LAAC,OAAO,IAAI;4CAAC,WAAU;;;;;;sDACvB,6LAAC;4CAAE,WAAU;sDAAyB,OAAO,KAAK;;;;;;;;;;;;+BANjD,OAAO,IAAI;;;;;;;;;;;;;;;;0BAahC,6LAAC,mIAAA,CAAA,OAAI;;kCACD,6LAAC,mIAAA,CAAA,aAAU;;0CACP,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAErB,6LAAC,mIAAA,CAAA,cAAW;kCACR,cAAA,6LAAC,oIAAA,CAAA,QAAK;;8CACF,6LAAC,oIAAA,CAAA,cAAW;8CACR,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;0DACL,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,6LAAC,oIAAA,CAAA,YAAS;0DAAC,cAAA,6LAAC;oDAAK,WAAU;8DAAU;;;;;;;;;;;;;;;;;;;;;;8CAG7C,6LAAC,oIAAA,CAAA,YAAS;8CACL,0BACG,6LAAC,oIAAA,CAAA,WAAQ;kDAAC,cAAA,6LAAC,oIAAA,CAAA,YAAS;4CAAC,SAAS;4CAAG,WAAU;sDAAc;;;;;;;;;;+CACzD,sBACA,6LAAC,oIAAA,CAAA,WAAQ;kDAAC,cAAA,6LAAC,oIAAA,CAAA,YAAS;4CAAC,SAAS;4CAAG,WAAU;sDAAgC;;;;;;;;;;+CAC3E,QAAQ,MAAM,KAAK,kBACnB,6LAAC,oIAAA,CAAA,WAAQ;kDAAC,cAAA,6LAAC,oIAAA,CAAA,YAAS;4CAAC,SAAS;4CAAG,WAAU;sDAAc;;;;;;;;;;+CACzD,QAAQ,GAAG,CAAC,CAAA,uBACZ,6LAAC,oIAAA,CAAA,WAAQ;;8DACL,6LAAC,oIAAA,CAAA,YAAS;oDAAC,WAAU;8DAAe,OAAO,EAAE;;;;;;8DAC7C,6LAAC,oIAAA,CAAA,YAAS;8DAAE,WAAW,OAAO,YAAY;;;;;;8DAC1C,6LAAC,oIAAA,CAAA,YAAS;8DAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,OAAO,UAAU,GAAG;;;;;;8DAChD,6LAAC,oIAAA,CAAA,YAAS;8DAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,OAAO,QAAQ,GAAG;;;;;;8DAC9C,6LAAC,oIAAA,CAAA,YAAS;oDAAC,WAAU;8DACjB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wDAAC,SAAQ;wDAAU,MAAK;wDAAK,SAAS,IAAM,iBAAiB,OAAO,EAAE;kEAAG;;;;;;;;;;;;2CANzE,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAkB5C,6LAAC,qIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAqB,cAAc;0BAC7C,cAAA,6LAAC,qIAAA,CAAA,gBAAa;oBAAC,WAAU;;sCACrB,6LAAC,qIAAA,CAAA,eAAY;;8CACT,6LAAC,qIAAA,CAAA,cAAW;;wCAAC;wCAAS,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,qBAAqB;;;;;;;8CAC9E,6LAAC,qIAAA,CAAA,oBAAiB;8CAAC;;;;;;;;;;;;sCAIvB,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAI,WAAU;;sDACX,6LAAC,oIAAA,CAAA,QAAK;4CAAC,SAAQ;sDAAa;;;;;;sDAC5B,6LAAC,sIAAA,CAAA,UAAO;;8DACJ,6LAAC,sIAAA,CAAA,iBAAc;oDAAC,OAAO;8DACnB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wDAAC,IAAG;wDAAa,SAAS;wDAAW,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8CAA8C,CAAC,QAAQ;;0EAC7G,6LAAC,6MAAA,CAAA,WAAY;gEAAC,WAAU;;;;;;4DACvB,MAAM,OAAQ,KAAK,EAAE,GAAG,GAAG,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE,aAAa;gEAAE,QAAQ,+IAAA,CAAA,KAAE;4DAAC,GAAG,GAAG,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,EAAE,EAAE,aAAa;gEAAE,QAAQ,+IAAA,CAAA,KAAE;4DAAC,IAAI,GAAG,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE,aAAa;gEAAE,QAAQ,+IAAA,CAAA,KAAE;4DAAC,mBAAM,6LAAC;0EAAK;;;;;;;;;;;;;;;;;8DAGjM,6LAAC,sIAAA,CAAA,iBAAc;oDAAC,WAAU;oDAAa,OAAM;8DACzC,cAAA,6LAAC,uIAAA,CAAA,WAAQ;wDAAC,YAAY;wDAAC,MAAK;wDAAQ,cAAc,MAAM;wDAAM,UAAU;wDAAM,UAAU;wDAAS,gBAAgB;wDAAG,QAAQ,+IAAA,CAAA,KAAE;;;;;;;;;;;;;;;;;;;;;;;8CAI1I,6LAAC;oCAAI,WAAU;;sDACX,6LAAC,oIAAA,CAAA,QAAK;sDAAC;;;;;;sDACP,6LAAC;4CAAI,WAAU;;8DACX,6LAAC,qIAAA,CAAA,SAAM;oDACH,SAAS,iBAAiB,UAAU,cAAc;oDAClD,SAAS,IAAM,gBAAgB;oDAC/B,WAAU;;sEAEV,6LAAC,+NAAA,CAAA,kBAAe;4DAAC,WAAU;;;;;;wDAAY;;;;;;;8DAG3C,6LAAC,qIAAA,CAAA,SAAM;oDACH,SAAS,iBAAiB,QAAQ,cAAc;oDAChD,SAAS,IAAM,gBAAgB;oDAC/B,WAAU;;sEAEV,6LAAC,iNAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;wDAAY;;;;;;;;;;;;;;;;;;;;;;;;;sCAMhD,6LAAC,qIAAA,CAAA,eAAY;;8CACT,6LAAC,qIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,SAAS,IAAM,uBAAuB;8CAAQ;;;;;;8CACxE,6LAAC,qIAAA,CAAA,SAAM;oCAAC,SAAS;oCAAsB,UAAU,gBAAgB;8CAC5D,eAAe,iBAAiB,cAAc,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;0BAOjF,6LAAC,qIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAkB,cAAc;0BAC1C,cAAA,6LAAC,qIAAA,CAAA,gBAAa;oBAAC,WAAU;;sCACrB,6LAAC,qIAAA,CAAA,eAAY;;8CACT,6LAAC,qIAAA,CAAA,cAAW;;wCAAC;wCAAsB,gBAAgB;;;;;;;8CACnD,6LAAC,qIAAA,CAAA,oBAAiB;;wCAAC;wCACF,iBAAiB,WAAW,eAAe,YAAY,IAAI;;;;;;;;;;;;;sCAGhF,6LAAC;4BAAI,WAAU;sCACX,cAAA,6LAAC;gCAAI,WAAU;0CACV,iBAAiB,KAAK,SAAS,CAAC,KAAK,KAAK,CAAC,eAAe,WAAW,GAAG,MAAM,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOhH;GAvOwB;;QACmB,mIAAA,CAAA,mBAAgB;;;KADnC","debugId":null}}]
}